//
//  ProfileScreenWorker.swift
//  ITmentors
//
//  Created by Vladimir Alecseev on 27.09.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Firebase
import FirebaseFirestore
import FirebaseStorage

class ProfileScreenWorker {
    func loadYourData(completion: @escaping (ProfileScreen.loadYourDataa.Response) -> (), error: @escaping () -> ()){
        
        guard let urID = UserDefaults.standard.string(forKey: "ShortUUID") else {error();return}
        let ref = Firestore.firestore().collection("Mentors").document(urID)
        
        ref.getDocument { doc, err in
            guard err == nil else {error(); return}
            guard let document = doc else {error(); return}
            
            guard let data = document.data() else {error(); return}

            let name = data["Name"] as? String
            let description = data["Description"] as? String
            let shortDescription = data["ShortDescription"] as? String
            let messageLink = data["MessageLink"] as? String
            let appleUUID = data["AppleUUID"] as? String
            
            var arrayOfLanguages: [Languages] = []
            
            self.loadLanguages(docRef: ref) { languages in
                arrayOfLanguages = languages
            }
            
            var imageData: Data?
            self.loadImage(userID: appleUUID ?? "") { imgData in
                imageData = imgData
                let response: ProfileScreen.loadYourDataa.Response =  ProfileScreen.loadYourDataa.Response(name: name, discription: description, imageData: imageData, languages: arrayOfLanguages, messageLink: messageLink, shortDiscription: shortDescription)
                
                completion(response)
            }
        }
    }
    
    private func loadLanguages(docRef: DocumentReference, completion: @escaping ([Languages]) -> ()){
        var arrayOfLanguages: [Languages] = []
        
        let enumer = LanguageNameToEnumType()
        docRef.collection("Languages").getDocuments { languages, errorr in
            guard errorr == nil else {return}
            guard let documentss = languages else {return}
            
            for doc in documentss.documents{
                let data = doc.data()
                guard let languageName = data["LanguageName"] as? String else {return}
                
                arrayOfLanguages.append(enumer.from(languageName))
            }
            completion(arrayOfLanguages)
        }
        
        
    }
    
    private func loadImage(userID: String, completion: @escaping (Data?) -> ()){
        let ref = Storage.storage().reference().child("avatars").child(userID)
        ref.getData(maxSize: 1024 * 1024 * 2) { data, error in
            guard error == nil else {return}
            guard let imageData = data else {return}
            completion(imageData)
        }
    }
}
